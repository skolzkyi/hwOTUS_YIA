version: '3.9'

services:
calendar:
    container_name: calendar
    build:
      context: ..
      dockerfile: ../build/Dockerfile
    env_file:
    - ../configs/config.env
    restart: always
    expose:
    - "4000"
    - "5000"
    ports:
      - "4000:8888"
      - "5000:5000"
    healthcheck:
      test: "curl -f localhost:4000"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      mysq-db:
        condition: service_healthy
    volumes:
      - "../configs:/app/configs"
    networks:
    - ofl_network
scheduler:
    container_name: scheduler
    build:
      context: ..
      dockerfile: ../build/scheduler/Dockerfile
    env_file:
    - ../configs/config_sheduler.env
    restart: always
    volumes:
      - "../configs:/app/configs"
    depends_on:
       mysq-db:
        condition: service_healthy
       kafka:
        condition: service_healthy
       calendar:
        condition: service_healthy
    networks:
    - ofl_network
sender:
    container_name: sender
    build:
      context: ..
      dockerfile: ../build/sender/Dockerfile
    env_file:
    - ../configs/config_sender.env
    restart: always
    volumes:
      - "../configs:/app/configs"
    depends_on:
       mysq-db:
        condition: service_healthy
       kafka:
        condition: service_healthy
       calendar:
        condition: service_healthy
       sheduler:
        condition: service_started
    networks:
    - ofl_network
zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
    networks:
    - ofl_network
kafka:
    hostname: kafka
    image: wurstmeister/kafka
    env_file:
    - ../configs/config_sheduler.env
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
     zookeeper:
        condition: service_started
    expose:
    - "9092"
    networks:
    - ofl_network
mysq-db:
    image: mysql:8
    restart: always
    env_file:
    - ../configs/config.env
    healthcheck:
      test: "mysql $$MYSQL_DATABASE -u$$MYSQL_USER -p$$MYSQL_PASSWORD -e 'SELECT 1;'"
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
    - "3306:3306"
    expose:
    - "3306"
    volumes:
    - ../migrations/001_migrations.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
    - ofl_network
phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - "9999:80"
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      mysq-db:
         condition: service_healthy
    networks:
    - ofl_network
    
networks:
  ofl_network:
    driver: bridge
